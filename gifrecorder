#!/bin/bash

# released under Creative Commons Attribution-ShareAlike 3.0
# http://creativecommons.org/licenses/by-sa/3.0/
# v1.2
# 22. 2. 2012
# dependencies: gifsicle

#setting optional arguments
sflag=
vflag=

while getopts :s:v name
do
	case $name in
	s)	s=1
		sval="$OPTARG"
		sflag="set";;
	v)	vflag=1;;
	:)	echo "Error: please specify the number of seconds."
		exit 2;;
	?)	printf "Usage: [-s seconds] [-v]\n"
		exit 2;;
	esac
done

#screen capturing
if [ -z "$sflag" ]; then
    sval=5
fi
seconds=$(echo "$sval"*5|bc)
cd /tmp
if [ ! -z "$vflag" ]; then
	echo "Now recording..."
fi
for (( i=1; i<$seconds; i++ ))
do
   padi=$(printf "%04d" $i)
   screencapture -C -t "gif" "recorderframe""$padi"".gif"
   sleep 0.1
done
screencapture -C -t "gif" "recorderframe9999.gif"
if [ ! -z "$vflag" ]; then
	echo "Recording complete."
fi

#processing the frames
framelist=$(frames=$(ls|grep -a recorderframe);echo ${frames//\n/ })
named=$(date -j +"%Y-%m-%d")
namet=$(tim=$(date -j +"%r");echo ${tim//:/.})
filename=$(echo "Screen shot ""$named"" at ""$namet"".gif")
gifsicle -w --delay 25 --loopcount $framelist > "$filename"
gifsicle -w -b --optimize=2 "$filename"
mv "$filename" ~/Desktop/
if [ ! -z "$vflag" ]; then
	echo "Screen recording saved to ~/Desktop/""$filename""."
fi

#cleaning up
rm recorderframe*
exit